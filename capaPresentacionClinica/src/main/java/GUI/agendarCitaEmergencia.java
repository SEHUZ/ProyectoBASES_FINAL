/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BO.CitaBO;
import BO.MedicoBO;
import DTO.CitaNuevaDTO;
import DTO.CitaViejaDTO;
import DTO.MedicoDTO;
import DTO.PacienteViejoDTO;
import Entidades.Cita;
import Exception.NegocioException;
import Exception.PersistenciaClinicaException;
import Mappers.MedicoMapper;
import Mappers.PacienteMapper;
import configuracion.DependencyInjector;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author sonic
 */
public class agendarCitaEmergencia extends javax.swing.JFrame {

    private PacienteViejoDTO paciente;
    private MedicoBO medicoBO = DependencyInjector.crearMedicoBO();
    private CitaBO citaBO = DependencyInjector.crearCitaBO();
    private final PacienteMapper pacienteMAPPER = new PacienteMapper();
    private final MedicoMapper mapper = new MedicoMapper();

    /**
     * Creates new form agendarCitaEmergencia
     */
    public agendarCitaEmergencia() {
        initComponents();
    }

    public void setPaciente(PacienteViejoDTO paciente) {
        this.paciente = paciente;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldEspecialidad = new javax.swing.JTextField();
        botonAgendarCita = new javax.swing.JButton();
        botonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(632, 757));
        setMinimumSize(new java.awt.Dimension(632, 757));
        setPreferredSize(new java.awt.Dimension(632, 757));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Agendar una cita de emergencia");

        jLabel3.setText("Especialidad");

        fieldEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldEspecialidadActionPerformed(evt);
            }
        });

        botonAgendarCita.setText("Agendar Cita");
        botonAgendarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgendarCitaActionPerformed(evt);
            }
        });

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(fieldEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonAgendarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206))))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(botonVolver)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 448, Short.MAX_VALUE)
                .addComponent(botonAgendarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(botonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldEspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldEspecialidadActionPerformed

    private void botonAgendarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgendarCitaActionPerformed
        try {
            agendarCitaDeEmergencia();
            
            // TODO add your handling code here:
        } catch (NegocioException ex) {
            Logger.getLogger(agendarCitaEmergencia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(agendarCitaEmergencia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PersistenciaClinicaException ex) {
            Logger.getLogger(agendarCitaEmergencia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonAgendarCitaActionPerformed

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(agendarCitaEmergencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(agendarCitaEmergencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(agendarCitaEmergencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(agendarCitaEmergencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new agendarCitaEmergencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgendarCita;
    private javax.swing.JButton botonVolver;
    private javax.swing.JTextField fieldEspecialidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
private void agendarCitaDeEmergencia() throws NegocioException, SQLException, PersistenciaClinicaException {
        String especialidad = fieldEspecialidad.getText().trim();
        if (especialidad.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese una especialidad v√°lida");
            return;
        }
        MedicoDTO medicoSeleccionado = medicoBO.consultarUnMedicoPorEspecialidad(especialidad);

        if (medicoSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "No hay medicos para esa especialidad");
            return;
        }

        try {

            CitaNuevaDTO citaDTO = new CitaNuevaDTO();
            citaDTO.setPaciente(pacienteMAPPER.toEntityViejo(paciente));
            citaDTO.setMedico(mapper.toEntityDTO(medicoSeleccionado));
            citaDTO.setTipoCita(Cita.TipoCita.EMERGENCIA);

            CitaViejaDTO citaAgendada = citaBO.agendarCitaEmergencia(citaDTO);

            String mensaje = String.format(
                    "Cita de Emergencia Agendada\nM√©dico: %s\nHora: %s\nFolio:  %s\nEspecialidad:  ",
                    citaAgendada.getMedico().getNombres() + " " + citaAgendada.getMedico().getApellidoPaterno(),
                    citaAgendada.getFechaHora(),
                    citaAgendada.getEmergencia().getFolio(),
                    citaAgendada.getMedico().getEspecialidad()
            );

            JOptionPane.showMessageDialog(this, mensaje);

        } catch (NegocioException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

}
